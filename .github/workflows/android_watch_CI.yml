name: Android CI
on:
  push:
    branches: [ "main", "watch" ]
  pull_request:
    branches: [ "main", "watch" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ '17' ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4 # v3에서 v4로 업데이트 권장
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: gradle
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          # 캐시 키를 더 안정적으로 조정: 동적으로 생성되는 gradle.properties 대신 고정된 파일들만 사용
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle', '**/settings.gradle', '**/gradle/libs.versions.toml', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Create and configure root gradle.properties
        run: |
          echo "android.useAndroidX=true" > gradle.properties
          echo "android.enableJetifier=true" >> gradle.properties
          # 메모리 설정: CI 환경에서 OutOfMemoryError 방지 및 성능 향상
          echo "org.gradle.jvmargs=-Xmx6g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" >> gradle.properties
      
      - name: Copy root gradle.properties to front module
        # 'front' 디렉토리가 존재하고 그 안에 gradle.properties를 복사
        run: |
          if [ -d "./front" ]; then
            cp gradle.properties ./front/gradle.properties || true
          else
            echo "::warning::'front' directory not found. Skipping gradle.properties copy to front module."
          fi
      - name: Create local.properties for front/app module
        # local.properties는 실제 앱 모듈의 루트에 생성하는 것이 일반적
        run: |
          mkdir -p ./front/app # 혹시 모를 디렉토리 생성
          echo "ODsay_APIKEY=${{ secrets.ODsay_APIKEY }}" > ./front/app/local.properties
          echo "Geolocation_APIKEY=${{ secrets.Geolocation_APIKEY }}" >> ./front/app/local.properties
          echo "SMARTTHINGS_API_TOKEN=${{ secrets.SMARTTHINGS_API_TOKEN }}" >> ./front/app/local.properties
          echo "Public_Bus_APIKEY=${{ secrets.Public_Bus_APIKEY }}" >> ./front/app/local.properties
          echo "Public_Subway_APIKEY=${{ secrets.Public_Subway_APIKEY }}" >> ./front/app/local.properties
          echo "KAKAO_NATIVE_API_KEY=${{ secrets.KAKAO_NATIVE_API_KEY }}" >> ./front/app/local.properties
      - name: Grant execute permission for gradlew
        # working-directory를 실제 모듈 디렉토리로 변경
        working-directory: ./front/app 
        run: chmod +x ./gradlew

      - name: Stop any running Gradle daemons
        # working-directory를 실제 모듈 디렉토리로 변경
        working-directory: ./front/app 
        run: ./gradlew --stop || true

      - name: Build with Gradle
        # working-directory를 실제 모듈 디렉토리로 변경
        working-directory: ./front/app 
        run: ./gradlew assembleDebug --stacktrace --info # 상세 로그를 위해 옵션 유지

      - name: Run unit tests
        # working-directory를 실제 모듈 디렉토리로 변경
        working-directory: ./front/app 
        run: ./gradlew testDebugUnitTest

      - name: Upload test results
