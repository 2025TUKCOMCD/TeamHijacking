name: Android CI

on:
  push:
    branches: [ "main", "watch" ]
  pull_request:
    branches: [ "main", "watch" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ '17' ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 필요에 따라 설정
          submodules: true # 필요에 따라 설정

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle', '**/gradle.properties', '**/settings.gradle', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        working-directory: ./front  # Navigate to the 'front' directory
        run: chmod +x ./gradlew      # Execute chmod within 'front'

      - name: Build with Gradle
        working-directory: ./front  # Navigate to the 'front' directory
        run: ./gradlew assembleDebug # Or assembleRelease, adjust as needed

      - name: Run unit tests
        working-directory: ./front  # Navigate to the 'front' directory
        run: ./gradlew testDebugUnitTest # Adjust as needed

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: ./front/app/build/reports/tests/testDebugUnitTest # Corrected path!

      - name: Upload APK (Debug)
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: app-debug
          path: ./front/app/build/outputs/apk/debug/*.apk # Corrected path!
